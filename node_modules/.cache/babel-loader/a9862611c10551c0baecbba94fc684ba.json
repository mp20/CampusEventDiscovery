{"ast":null,"code":"var _jsxFileName = \"/Users/money/Documents/CampusDiscovery/src/Components/TextField.js\";\nimport visible from \"./images/visibility-true.svg\";\nimport invisible from \"./images/visibility-false.svg\";\nimport valid from \"./images/valid.svg\";\nimport invalid from \"./images/invalid.svg\";\nimport { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nclass TextField extends Component {\n  constructor(props) {\n    super(props);\n    this.rulesets = [\"Username\", \"Email\", \"Password\", \"Confirm Password\", \"NotEmpty\"];\n    if (props.hasOwnProperty(\"fields\") && props.hasOwnProperty(\"label\")) {\n      //  Add the FormElements to the delegate's fields.\n      this.props.fields[props.label] = this;\n    } else {\n      throw \"FormElement: Must pass `delegate: FormDelegate` and `label: String` as prop.\";\n    }\n    if (this.rulesets.includes(props.check)) {\n      this.isChecked = true;\n    } else {\n      this.isChecked = false;\n    }\n    this.text = \"\";\n    this.state = {\n      isVisible: !props.isSecure,\n      focus: false\n    };\n\n    //  Bind methods.\n    this.visibilityButtonPressed = this.visibilityButtonPressed.bind(this);\n    this.isValid = this.isValid.bind(this);\n    this.textDidChange = this.textDidChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.passwordRules = this.passwordRules.bind(this);\n    this.getValue = this.getValue.bind(this);\n  }\n  usernameRules(str) {\n    if (!/^[A-Za-z0-9\\-_]{5,20}$/.test(str)) {\n      throw 'Username must be between 5 and 20 characters and can only contain letters, numbers, \"-\", and \"_\".';\n    }\n  }\n  emailMatch(str) {\n    if (!/^[A-Za-z0-9+_.\\-]+@[A-Za-z0-9\\-]+\\.[A-Za-z]+$/.test(str)) {\n      throw \"Must be a valid email.\";\n    }\n  }\n  notEmpty(str) {\n    if (str.length == 0 || str.search(/[^\\s]/) == -1) {\n      throw \"Cannot be empty\";\n    }\n  }\n  passwordRules(str) {\n    this.props.delegate.fields[\"Confirm Password\"].setState({\n      needsDisplay: true\n    });\n    if (!/^[A-Za-z0-9\\-_!?$#@%&]{5,20}$/.test(str)) {\n      throw \"Password must be between 5 and 20 characters and can only contain letters, numbers, and -_!?$#@%&.\";\n    }\n    if (str.search(/[\\-_!?$#@%&]/) == -1) {\n      throw \"Password must contain a symbol (-_!?$#@%&).\";\n    }\n    if (str.search(/\\d/) == -1) {\n      throw \"Password must contain a number.\";\n    }\n    if (str.search(/[A-Z]/) == -1 && str.search(/[a-z]/) == -1) {\n      throw \"Password must use uppercase and lowercase letters.\";\n    }\n  }\n  repeatPasswordRules(str) {\n    if (!this.props.checkPassword(str)) {\n      throw \"Passwords must match.\";\n    }\n  }\n  visibilityButtonPressed() {\n    this.setState({\n      isVisible: !this.state.isVisible\n    });\n  }\n  isValid() {\n    // determine if the contents of the field are isValid.\n    if (this.isChecked) {\n      try {\n        switch (this.props.check) {\n          case \"Username\":\n            this.usernameRules(this.text);\n            break;\n          case \"Email\":\n            this.emailMatch(this.text);\n            break;\n          case \"Password\":\n            this.passwordRules(this.text);\n            break;\n          case \"Confirm Password\":\n            this.repeatPasswordRules(this.text);\n            break;\n          case \"NotEmpty\":\n            this.notEmpty(this.text);\n            break;\n          default:\n            break;\n        }\n        return true;\n      } catch (e) {\n        return e;\n      }\n    } else {\n      return true;\n    }\n  }\n  getValue() {\n    return this.text;\n  }\n  textDidChange(event) {\n    this.text = event.target.value;\n    this.setState({});\n  }\n  onFocus(event) {\n    this.setState({\n      focus: true\n    });\n  }\n  onBlur(event) {\n    this.setState({\n      focus: false\n    });\n  }\n  render() {\n    let verify = this.isValid();\n    const popover = () => {\n      if (typeof verify === \"string\" && this.state.focus) {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popover\",\n          children: verify\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 16\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n      }\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"field-header-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"field-header\",\n          children: this.props.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, this), this.props.isSecure ? /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"visibility\",\n          onClick: this.visibilityButtonPressed,\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: this.state.isVisible ? visible : invisible\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.focus ? \"field-container-selected\" : \"field-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: this.state.isVisible ? \"text\" : \"password\",\n          className: \"field\",\n          onChange: this.textDidChange,\n          onFocus: this.onFocus,\n          onBlur: this.onBlur\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this), this.isChecked ? /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"condition-indicator\",\n          src: typeof verify !== \"string\" ? valid : invalid\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), popover()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this);\n  }\n}\nexport default TextField;","map":{"version":3,"names":["visible","invisible","valid","invalid","Component","TextField","constructor","props","rulesets","hasOwnProperty","fields","label","includes","check","isChecked","text","state","isVisible","isSecure","focus","visibilityButtonPressed","bind","isValid","textDidChange","onFocus","onBlur","passwordRules","getValue","usernameRules","str","test","emailMatch","notEmpty","length","search","delegate","setState","needsDisplay","repeatPasswordRules","checkPassword","e","event","target","value","render","verify","popover"],"sources":["/Users/money/Documents/CampusDiscovery/src/Components/TextField.js"],"sourcesContent":["import visible from \"./images/visibility-true.svg\";\nimport invisible from \"./images/visibility-false.svg\";\nimport valid from \"./images/valid.svg\";\nimport invalid from \"./images/invalid.svg\";\nimport {Component} from \"react\";\n\nclass TextField extends Component {\n  rulesets = [\"Username\", \"Email\", \"Password\", \"Confirm Password\", \"NotEmpty\"];\n\n  constructor(props) {\n    super(props);\n\n    if (props.hasOwnProperty(\"fields\") && props.hasOwnProperty(\"label\")) {\n      //  Add the FormElements to the delegate's fields.\n      this.props.fields[props.label] = this;\n    } else {\n      throw \"FormElement: Must pass `delegate: FormDelegate` and `label: String` as prop.\";\n    }\n\n    if (this.rulesets.includes(props.check)) {\n      this.isChecked = true;\n    } else {\n      this.isChecked = false;\n    }\n\n    this.text = \"\";\n    this.state = {\n      isVisible: !props.isSecure,\n      focus: false,\n    };\n\n    //  Bind methods.\n    this.visibilityButtonPressed = this.visibilityButtonPressed.bind(this);\n    this.isValid = this.isValid.bind(this);\n    this.textDidChange = this.textDidChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.passwordRules = this.passwordRules.bind(this);\n    this.getValue = this.getValue.bind(this);\n  }\n\n  usernameRules(str) {\n    if (!/^[A-Za-z0-9\\-_]{5,20}$/.test(str)) {\n      throw 'Username must be between 5 and 20 characters and can only contain letters, numbers, \"-\", and \"_\".';\n    }\n  }\n\n  emailMatch(str) {\n    if (!/^[A-Za-z0-9+_.\\-]+@[A-Za-z0-9\\-]+\\.[A-Za-z]+$/.test(str)) {\n      throw \"Must be a valid email.\";\n    }\n  }\n\n  notEmpty(str) {\n    if (str.length == 0 || str.search(/[^\\s]/) == -1) {\n      throw \"Cannot be empty\";\n    }\n  }\n\n  passwordRules(str) {\n    this.props.delegate.fields[\"Confirm Password\"].setState({\n      needsDisplay: true,\n    });\n    if (!/^[A-Za-z0-9\\-_!?$#@%&]{5,20}$/.test(str)) {\n      throw \"Password must be between 5 and 20 characters and can only contain letters, numbers, and -_!?$#@%&.\";\n    }\n    if (str.search(/[\\-_!?$#@%&]/) == -1) {\n      throw \"Password must contain a symbol (-_!?$#@%&).\";\n    }\n    if (str.search(/\\d/) == -1) {\n      throw \"Password must contain a number.\";\n    }\n    if (str.search(/[A-Z]/) == -1 && str.search(/[a-z]/) == -1) {\n      throw \"Password must use uppercase and lowercase letters.\";\n    }\n  }\n\n  repeatPasswordRules(str) {\n    if (!this.props.checkPassword(str)) {\n      throw \"Passwords must match.\";\n    }\n  }\n\n  visibilityButtonPressed() {\n    this.setState({\n      isVisible: !this.state.isVisible,\n    });\n  }\n\n  isValid() {\n    // determine if the contents of the field are isValid.\n    if (this.isChecked) {\n      try {\n        switch (this.props.check) {\n          case \"Username\":\n            this.usernameRules(this.text);\n            break;\n          case \"Email\":\n            this.emailMatch(this.text);\n            break;\n          case \"Password\":\n            this.passwordRules(this.text);\n            break;\n          case \"Confirm Password\":\n            this.repeatPasswordRules(this.text);\n            break;\n          case \"NotEmpty\":\n            this.notEmpty(this.text);\n            break;\n          default:\n            break;\n        }\n        return true;\n      } catch (e) {\n        return e;\n      }\n    } else {\n      return true;\n    }\n  }\n\n  getValue() {\n    return this.text;\n  }\n\n  textDidChange(event) {\n    this.text = event.target.value;\n    this.setState({});\n  }\n\n  onFocus(event) {\n    this.setState({ focus: true });\n  }\n\n  onBlur(event) {\n    this.setState({ focus: false });\n  }\n\n  render() {\n    let verify = this.isValid();\n    const popover = () => {\n      if (typeof verify === \"string\" && this.state.focus) {\n        return <div className=\"popover\">{verify}</div>;\n      } else {\n        return <></>;\n      }\n    };\n    return (\n      <div>\n        <div className=\"field-header-container\">\n          <p className=\"field-header\">{this.props.label}</p>\n          {this.props.isSecure ? (\n            <button\n              className=\"visibility\"\n              onClick={this.visibilityButtonPressed}\n            >\n              <img src={this.state.isVisible ? visible : invisible} />\n            </button>\n          ) : (\n            <></>\n          )}\n        </div>\n        <div\n          className={\n            this.state.focus ? \"field-container-selected\" : \"field-container\"\n          }\n        >\n          <input\n            type={this.state.isVisible ? \"text\" : \"password\"}\n            className=\"field\"\n            onChange={this.textDidChange}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n          />\n          {this.isChecked ? (\n            <img\n              className=\"condition-indicator\"\n              src={typeof verify !== \"string\" ? valid : invalid}\n            />\n          ) : (\n            <></>\n          )}\n          {popover()}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TextField;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}