{"ast":null,"code":"var _jsxFileName = \"/Users/money/Documents/CampusDiscovery/src/EventBrowser.js\";\nimport \"./Stylesheets/index.css\";\nimport EventTile from \"./EventTile\";\nimport placeholderImage from \"./images/placeholderImage.png\";\nimport Dropdown from \"./Components/Dropdown\";\nimport FormDelegate from \"./FormDelegate\";\nimport PageSelect from \"./Components/PageSelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass EventBrowser extends FormDelegate {\n  constructor(props) {\n    super(props);\n    this.blankEvent = {\n      attendees: [],\n      capacity: \"\",\n      categories: [],\n      date: \"\",\n      description: \"\",\n      eventID: -1,\n      location: [33.7756, -84.3963],\n      name: \"\",\n      owner: -1\n    };\n    this.state = {\n      menuType: \"browser\",\n      popUpInfo: {\n        thumbnail: placeholderImage,\n        event: this.blankEvent\n      },\n      currentPage: 1,\n      events: []\n    };\n    this.tiles = this.tiles.bind(this);\n    this.getEvents = this.getEvents.bind(this);\n    this.filterDidChange = this.filterDidChange.bind(this);\n    this.setPage = this.setPage.bind(this);\n    this.categoryOptions = this.props.categories;\n    this.getEvents();\n  }\n  setPage(value) {\n    this.setState({\n      currentPage: value\n    });\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"event-browser-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"primary-header\",\n        children: \"Campus Events Near Me\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-tile-browser-container\",\n        children: this.tiles()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"event-browser-bottom-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(Dropdown, {\n          label: \"Filter\",\n          isSecure: false,\n          showLabel: false,\n          onChange: this.filterDidChange,\n          options: [\"No Filter\"].concat(this.categoryOptions),\n          fields: this.fields\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(PageSelect, {\n          numberOfPages: Math.ceil(this.state.events.length / 10),\n          changePage: this.setPage,\n          currentPage: this.state.currentPage\n        }, Date.now(), false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"new-event-button\",\n          onClick: () => this.props.changePage(null),\n          children: \"New Event\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  }\n  getEvents() {\n    fetch(\"http://localhost:8080/api/get-events\", {\n      method: \"GET\",\n      mode: \"cors\",\n      cache: \"no-cache\",\n      credentials: \"same-origin\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(response => response.json()).then(response => {\n      this.setState({\n        events: response.events,\n        currentPage: 1\n      });\n    });\n  }\n  tiles() {\n    let tiles = [];\n    for (let i = (this.state.currentPage - 1) * 10; i < Math.min((this.state.currentPage - 1) * 10 + 10, (_this$state$events = this.state.events) === null || _this$state$events === void 0 ? void 0 : _this$state$events.length); i++) {\n      var _this$state$events;\n      tiles.push( /*#__PURE__*/_jsxDEV(EventTile, {\n        event: this.state.events[i],\n        onClick: this.props.changePage\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this));\n    }\n    return tiles;\n  }\n  filterDidChange(value) {\n    console.log(this.categoryOptions.indexOf(value));\n    if (value == \"No Filter\") {\n      this.getEvents();\n    } else {\n      fetch(\"http://localhost:8080/api/get-events-filtered\", {\n        method: \"POST\",\n        mode: \"cors\",\n        cache: \"no-cache\",\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.categoryOptions.indexOf(value))\n      }).then(response => response.json()).then(response => {\n        this.setState({\n          events: response.events[0],\n          currentPage: 1\n        });\n      });\n    }\n  }\n}\nexport default EventBrowser;","map":{"version":3,"names":["EventTile","placeholderImage","Dropdown","FormDelegate","PageSelect","EventBrowser","constructor","props","blankEvent","attendees","capacity","categories","date","description","eventID","location","name","owner","state","menuType","popUpInfo","thumbnail","event","currentPage","events","tiles","bind","getEvents","filterDidChange","setPage","categoryOptions","value","setState","render","concat","fields","Math","ceil","length","Date","now","changePage","fetch","method","mode","cache","credentials","headers","then","response","json","i","min","push","console","log","indexOf","body","JSON","stringify"],"sources":["/Users/money/Documents/CampusDiscovery/src/EventBrowser.js"],"sourcesContent":["import \"./Stylesheets/index.css\";\nimport EventTile from \"./EventTile\";\nimport placeholderImage from \"./images/placeholderImage.png\";\nimport Dropdown from \"./Components/Dropdown\";\nimport FormDelegate from \"./FormDelegate\";\nimport PageSelect from \"./Components/PageSelect\";\n\nclass EventBrowser extends FormDelegate {\n    constructor(props) {\n        super(props);\n\n        this.blankEvent = {\n            attendees: [],\n            capacity: \"\",\n            categories: [],\n            date: \"\",\n            description: \"\",\n            eventID: -1,\n            location: [33.7756, -84.3963],\n            name: \"\",\n            owner: -1,\n        };\n\n        this.state = {\n            menuType: \"browser\",\n            popUpInfo: {\n                thumbnail: placeholderImage,\n                event: this.blankEvent,\n            },\n            currentPage: 1,\n            events: [],\n\n        };\n\n        this.tiles = this.tiles.bind(this);\n        this.getEvents = this.getEvents.bind(this);\n        this.filterDidChange = this.filterDidChange.bind(this);\n        this.setPage = this.setPage.bind(this);\n        this.categoryOptions = this.props.categories;\n        this.getEvents();\n    }\n\n    setPage(value) {\n        this.setState({\n            currentPage: value\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"event-browser-container\">\n\n                <h1 className=\"primary-header\">Campus Events Near Me</h1>\n\n                <div className=\"event-tile-browser-container\">{this.tiles()}</div>\n\n                <div className=\"event-browser-bottom-buttons\">\n\n                    <Dropdown\n                        label=\"Filter\"\n                        isSecure={false}\n                        showLabel={false}\n                        onChange={this.filterDidChange}\n                        options={[\"No Filter\"].concat(this.categoryOptions)}\n                        fields={this.fields}\n                    />\n\n                    <PageSelect\n                        key={Date.now()}\n                        numberOfPages={Math.ceil(this.state.events.length / 10)}\n                        changePage={this.setPage}\n                        currentPage={this.state.currentPage}\n                    />\n                    <button\n                        className=\"new-event-button\"\n                        onClick={() => this.props.changePage(null)}\n                    >\n                        New Event\n                    </button>\n\n                </div>\n\n            </div>\n        );\n    }\n\n    getEvents() {\n        fetch(\"http://localhost:8080/api/get-events\", {\n            method: \"GET\",\n            mode: \"cors\",\n            cache: \"no-cache\",\n            credentials: \"same-origin\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n            },\n        })\n            .then((response) =>\n                response.json()\n            )\n            .then((response) => {\n                this.setState({ events: response.events, currentPage: 1 });\n            });\n    }\n\n\n\n    tiles() {\n        let tiles = [];\n        for (let i = (this.state.currentPage - 1) * 10; i < Math.min((this.state.currentPage - 1) * 10 + 10, this.state.events?.length); i++) {\n            tiles.push(\n                <EventTile\n                    key={i}\n                    event={this.state.events[i]}\n                    onClick={this.props.changePage}\n                />\n            );\n        }\n        return tiles;\n    }\n\n    filterDidChange(value) {\n        console.log(this.categoryOptions.indexOf(value))\n        if (value == \"No Filter\") {\n            this.getEvents();\n        } else {\n            fetch(\n                \"http://localhost:8080/api/get-events-filtered\",\n                {\n                    method: \"POST\",\n                    mode: \"cors\",\n                    cache: \"no-cache\",\n                    credentials: \"same-origin\",\n                    headers: {\n                        \"Content-Type\": \"application/json\",\n                    },\n                    body: JSON.stringify(this.categoryOptions.indexOf(value))\n                }\n            )\n                .then((response) => response.json())\n                .then((response) => {\n                    this.setState({ events: response.events[0], currentPage: 1 });\n                });\n        }\n    }\n}\n\nexport default EventBrowser;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}